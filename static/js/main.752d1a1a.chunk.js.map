{"version":3,"sources":["components/DarkModeToggle.js","components/UrlBar.js","components/ShareButton.js","components/LogView.js","components/SystemInfo.js","components/BundleView.js","components/NothingLoaded.js","util/zip.js","util/bundle.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["DarkModeToggle","props","useState","darkMode","setDarkMode","Tooltip","title","IconButton","onClick","onChange","color","useStyles","makeStyles","theme","grow","flexGrow","url","position","borderRadius","shape","backgroundColor","fade","palette","common","white","breakpoints","up","marginRight","spacing","marginLeft","urlIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","width","inputInput","paddingLeft","transitions","create","UrlBar","classes","setUrl","filename","mode","className","Hidden","mdDown","InputBase","placeholder","root","input","event","target","value","onKeyDown","key","handleUrlChange","defaultValue","inputProps","readOnly","ShareButton","enqueueSnackbar","useSnackbar","shareModalOpen","setShareModalOpen","shareUrl","window","location","origin","pathname","encodeURIComponent","handleClose","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","TextField","InputProps","onFocus","select","DialogActions","navigator","share","Button","document","clipboard","writeText","LogView","lines","content","split","lineCount","length","log","overflow","line","toString","text","secondary","itemCount","itemSize","index","style","data-linenumber","SystemInfo","info","filter","l","trim","map","console","BundleView","SystemInfoBlock","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","Typography","heading","AccordionDetails","bundle","systeminfo","LogBlock","logs","language","NothingLoaded","flexDirection","dropzoneText","files","onUpload","filesLimit","acceptedFiles","maxFileSize","showPreviewsInDropzone","showAlerts","loadRemote","a","fetch","response","ok","Error","status","blob","loadZip","JSZip","loadAsync","zip","file","format","async","utils","loadRemoteZip","containsFile","getFileContents","ziputils","contents","push","loadBundle","defaultBundle","appBar","toolbar","down","urlbar","order","paddingBottom","offset","mixins","minHeight","container","paddingTop","App","initialValue","item","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","useMediaQuery","setFilename","bundleutils","setBundle","setError","loading","setLoading","pallet","darkModeTheme","createMuiTheme","type","handleDarkModeToggle","newUrl","updateHistory","match","replace","corsRewrite","then","handleZipChange","catch","handleError","handleReset","handleUpload","name","windowUrl","URL","searchParams","set","delete","history","replaceState","MainView","Alert","severity","AlertTitle","CircularProgress","Navbar","AppBar","Toolbar","mdUp","xsDown","href","ThemeProvider","CssBaseline","Container","maxWidth","search","URLSearchParams","get","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.752d1a1a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DarkModeIcon from \"@material-ui/icons/Brightness4\";\nimport LightModeIcon from \"@material-ui/icons/Brightness7\";\n\nexport default function DarkModeToggle(props) {\n    const [darkMode, setDarkMode] = useState(props.darkMode);\n\n    const handleDarkModeToggle = () => {\n        props.onChange(!darkMode);\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <Tooltip title=\"Toggle dark mode\">\n            <IconButton onClick={handleDarkModeToggle} color=\"inherit\">\n                { darkMode ? <LightModeIcon /> : <DarkModeIcon /> }\n            </IconButton>\n        </Tooltip>\n    )\n}","import React, { useState } from \"react\";\n\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport InputBase from \"@material-ui/core/InputBase\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1\n    },\n    url: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      [theme.breakpoints.up('md')]: {\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n      },\n      flexGrow: 1\n    },\n    urlIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\",\n      width: \"100%\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 1),\n      [theme.breakpoints.up('md')]: {\n        paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      },\n      transition: theme.transitions.create('width'),\n      width: \"100%\",\n    }\n}));\n\n\nexport default function UrlBar(props) {\n    const classes = useStyles();\n\n    const [url, setUrl] = useState(props.url);\n    const [mode] = useState(props.filename ? \"upload\" : \"url\");\n\n    const handleChange = (event) => {\n        if (mode === \"url\") {\n            setUrl(event.target.value);\n        }\n    }\n\n    const handleKeyDown = (event) => {\n        if (mode === \"url\" && event.key === \"Enter\") {\n            props.handleUrlChange(url);\n        }\n    }\n\n    return (\n        <div className={classes.url}>\n            <Hidden mdDown>\n                <div className={classes.urlIcon}>\n                {props.filename ? (\n                    <UploadIcon />\n                ) : (\n                    <LinkIcon />\n                )}\n                </div>\n            </Hidden>\n            <InputBase\n                placeholder=\"URL...\"\n                classes={{\n                    root: classes.inputRoot,\n                    input: classes.inputInput,\n                }}\n                onChange={handleChange}\n                onKeyDown={handleKeyDown}\n                defaultValue={(mode === \"upload\" ? props.filename : props.url)}\n                inputProps={{ readOnly: mode === \"upload\", }}\n            />\n        </div>\n    )\n}","import React, { useState } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport { useSnackbar } from \"notistack\";\n\nexport default function ShareButton(props) {\n    const { enqueueSnackbar } = useSnackbar();\n    const [ shareModalOpen, setShareModalOpen ] = useState(false);\n    const shareUrl = window.location.origin + window.location.pathname + \"?url=\" + encodeURIComponent(props.url);\n\n    const handleShareClick = () => {\n        setShareModalOpen(true);\n    }\n\n    const handleShare = () => {\n        if (navigator.share) {\n            navigator.share({\n                title: document.title,\n                url: shareUrl\n            })\n            handleClose();\n        }\n    }\n\n    const handleCopy = () => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareUrl);\n            enqueueSnackbar(\"URL copied to clipboard!\");\n            handleClose();\n        }\n    }\n\n    const handleClose = () => {\n        setShareModalOpen(false);\n    }\n\n    if (true) {\n        return (\n            <>\n            <Tooltip title=\"Get shareable link\">\n                <IconButton onClick={handleShareClick} color=\"inherit\">\n                    <ShareIcon />\n                </IconButton>\n            </Tooltip>\n\n            <Dialog open={shareModalOpen} onClose={handleClose} fullWidth>\n                <DialogTitle>Shareable link</DialogTitle>\n                <DialogContent>\n                    <TextField value={shareUrl} InputProps={{ readOnly: true, }} onFocus={event => {event.target.select()}} fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    {(navigator.share) ? \n                        <Button onClick={handleShare}>\n                            Share\n                        </Button>\n                    :\n                        (null)\n                    }\n                    {(navigator.clipboard) ? \n                        <Button onClick={handleCopy}>\n                            Copy\n                        </Button>\n                    : \n                        (null)\n                    }\n                    <Button onClick={handleClose}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            </>\n        )\n    } else {\n        return (null)\n    }\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FixedSizeList } from \"react-window\";\n\nexport default function LogView(props) {\n    const lines = props.content.split(\"\\n\");\n    const lineCount = lines.length;\n\n    const classes = makeStyles(theme => ({\n        log: {\n            flexGrow: 1,\n            overflow: \"auto\",\n            padding: 0,\n            \"font-family\": \"'JetBrains Mono', 'Droid Sans Mono', monospace\",\n        },\n        line: {\n            \"&::before\": {\n                content: \"attr(data-linenumber)\",\n                display: \"inline-block\",\n                width: `${lineCount.toString().length}ch`,\n                \"text-align\": \"right\",\n                \"margin-right\": \"1em\",\n                \"color\": theme.palette.text.secondary\n            }\n        }\n    }))();\n\n    const Line = ({ index, style }) => (\n        <span style={style}><span data-linenumber={index + 1} className={classes.line}>{lines[index]}</span></span>\n    )\n\n    return (\n        <code className={classes.log}>\n            <pre>\n                <FixedSizeList \n                    height={500}\n                    itemCount={lineCount}\n                    itemSize={20}\n                >\n                    {Line}\n                </FixedSizeList>\n            </pre>\n        </code>\n    )\n}","import React from \"react\";\n\nexport default function SystemInfo(props) {\n    const lines = props.info.split(\"\\n\").filter(l => l.trim() !== \"\").map(l => {\n        const [key, value] = l.split(\":\", 2);\n        return { key: key, value: value }\n    });\n\n    console.log(lines);\n\n    return (\n        <div>\n            {lines.map((line, index) => (\n                <div key={line.key}>\n                    <strong>{line.key}</strong>: {line.value}<br />\n                </div>\n            ))}\n        </div>\n    )\n}","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LogView from \"./LogView\";\nimport SystemInfo from \"./SystemInfo\";\n\nconst useStyles = makeStyles(theme => ({\n}));\n\nexport default function BundleView(props) {\n    const classes = useStyles();\n\n    const SystemInfoBlock = () => {\n        return (\n            <Accordion defaultExpanded>\n                <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel-sysinfo-content\" id=\"panel-sysinfo-header\">\n                <Typography className={classes.heading}>System Information</Typography>\n                </AccordionSummary>\n                <AccordionDetails>\n                <SystemInfo info={props.bundle.systeminfo} />\n                </AccordionDetails>\n            </Accordion>\n        )\n    }\n\n    const LogBlock = () => {\n        return (\n            <div>\n                {props.bundle.logs.map((log, index) => (\n                    <Accordion key={log.log}>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel-log-\" + index + \"-content\"} id={\"panel-log-\" + index + \"-header\"}>\n                            <Typography className={classes.heading}>{log.log}</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                            <LogView log={log.log} content={log.content} language=\"plain\" />\n                        </AccordionDetails>\n                    </Accordion>\n                ))}\n            </div>\n        )\n    }\n\n    return (\n      <div>\n          <SystemInfoBlock />\n          <LogBlock />\n      </div>\n    )\n}","import React from \"react\";\n\nimport { DropzoneArea } from \"material-ui-dropzone\";\n\nexport default function NothingLoaded(props) {\n    console.log(\"Rendering NothingChanged...\");\n\n    const handleChange = (files) => {\n        console.log(\"Entered NothingLoaded.handleChange...\");\n        if (files.length > 0) {\n            props.onUpload(files[0]);\n        }\n        console.log(\"Exiting NothingLoaded.handleChange...\");\n    };\n\n    return (\n        <div style={{ display: \"flex\", justifyContent: \"center\", flexDirection: \"column\" }}>\n            <DropzoneArea\n                style={{\"flex-basis\": \"100%\"}}\n                dropzoneText=\"Enter an URL for a bundle above and press Enter, or drag and drop a file here or click to upload one\"\n                onChange={handleChange} \n                filesLimit={1} \n                acceptedFiles={[\".zip\"]}\n                maxFileSize={30000000}\n                showPreviewsInDropzone={false}\n                showAlerts={false}\n                />\n        </div>\n    )\n}","import JSZip from \"jszip\";\n\nasync function loadRemote(url) {\n    const response = await fetch(url, {mode: 'cors',});\n    console.log(response);\n    if (!response.ok) {\n        throw new Error(`Could not load file from ${url}: ${response.status}`);\n    }\n    return await response.blob();\n}\n\nasync function loadRemoteZip(url) {\n    const blob = await loadRemote(url);\n    return await loadZip(blob);\n}\n\nasync function loadZip(blob) {\n    return await JSZip.loadAsync(blob);\n}\n\nasync function containsFile(zip, filename) {\n    return await zip.file(filename) !== null;\n}\n\nasync function getFileContents(zip, filename, format) {\n    format = format || \"blob\";\n    return await zip.file(filename).async(format);\n}\n\nconst utils = {\n    loadRemote: loadRemote,\n    loadZip: loadZip,\n    loadRemoteZip: loadRemoteZip,\n    containsFile: containsFile,\n    getFileContents: getFileContents\n}\n\nexport default utils;","import ziputils from \"./zip\";\n\nasync function loadBundle(zip) {\n    const files = [\"octoprint.log\", \"serial.log\", \"terminal.txt\", \"plugin_softwareupdate_console.log\", \"plugin_pluginmanager_console.log\"];\n\n    const systeminfo = await ziputils.getFileContents(zip, \"systeminfo.txt\", \"string\");\n    if (!systeminfo) {\n        throw new Error(\"No systeminfo.txt found\");\n    }\n\n    const contents = {};\n    for (const filename of files) {\n        try {\n            contents[filename] = await ziputils.getFileContents(zip, filename, \"string\");\n        } catch(error) {\n            console.log(`No ${filename} in zip...`);\n        }\n    }\n\n    const logs = [];\n    for (const filename of files) {\n        if (contents[filename]) {\n            logs.push({ log: filename, content: contents[filename] });\n        }\n    }\n\n    return {\n        systeminfo: systeminfo,\n        logs: logs\n    };\n}\n\n\nconst defaultBundle = {\n    systeminfo: \"\",\n    logs: []\n};\n\nconst utils = {\n    loadBundle: loadBundle,\n    defaultBundle: defaultBundle\n}\n\nexport default utils;\n","import React, { useState } from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport DarkModeToggle from \"./components/DarkModeToggle\";\nimport UrlBar from \"./components/UrlBar\";\nimport ShareButton from \"./components/ShareButton\";\nimport BundleView from \"./components/BundleView\";\nimport NothingLoaded from \"./components/NothingLoaded\";\n\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nimport ziputils from \"./util/zip\";\nimport bundleutils from \"./util/bundle\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        overflow: \"auto\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n\n    appBar: {\n    },\n    toolbar: {\n      [theme.breakpoints.down('md')]: {\n        \"justify-content\": \"flex-end\",\n        \"flex-wrap\": \"wrap\",\n      }\n    },\n    urlbar: {\n      flexGrow: 1,\n      [theme.breakpoints.down('md')]: {\n        \"flex-basis\": \"100%\",\n        order: 99,\n        paddingBottom: theme.spacing(2)\n      },\n    },\n    title: {\n      \"justify-item\": \"left\",\n    },\n\n    offset: theme.mixins.toolbar,\n\n    content: {\n      flexGrow: 1,\n      overflow: \"auto\",\n      \"padding-top\": theme.mixins.toolbar.minHeight,\n      [theme.breakpoints.down('md')]: {\n        \"padding-top\": theme.mixins.toolbar.minHeight * 2,\n      }\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      [theme.breakpoints.down('md')]: {\n        paddingTop: 0,\n      },\n      paddingBottom: theme.spacing(4)\n    },\n}));\n\nfunction corsRewrite(url) {\n  const githubRegex = /^https:\\/\\/github\\.com\\/[a-zA-Z0-9_-]+\\/[a-zA-Z0-9_-]+\\/files\\//\n  if (url.match(githubRegex)) {\n      return url.replace(\"https://github.com\", \"https://bundleviewer.octoprint.org/bundles\");\n  }\n  return url;\n}\n\nexport default function App(props) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [darkMode, setDarkMode] = useLocalStorage(\"enableDarkMode\", prefersDarkMode);\n\n    const [url, setUrl] = useState(props.url);\n    const [filename, setFilename] = useState(props.url);\n  \n    const [bundle, setBundle] = useState(bundleutils.defaultBundle);\n    const [error, setError] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const pallet = darkMode ? \"dark\" : \"light\";\n    const darkModeTheme = createMuiTheme({\n        palette: {\n            type: pallet\n        }\n    });\n\n    const handleDarkModeToggle = () => {\n        setDarkMode(!darkMode);\n    }\n\n    const handleUrlChange = (newUrl) => {\n      if (!newUrl) {\n        handleReset();\n      } else {\n        setError(false);\n        setLoading(true);\n  \n        setUrl(newUrl);\n        updateHistory(newUrl);\n        setFilename(\"\");\n  \n        const url = corsRewrite(newUrl);\n        ziputils.loadRemoteZip(url).then(handleZipChange).catch(handleError);\n      }\n    }\n\n    const handleUpload = (blob) => {\n      setError(false);\n      setLoading(true);\n\n      setFilename(blob.name);\n      setUrl(\"\");\n\n      ziputils.loadZip(blob).then(handleZipChange).catch(handleError);\n    }\n\n    const handleZipChange = (zip) => {\n      bundleutils.loadBundle(zip).then((bundle) => {\n        setBundle(bundle);\n        setLoading(false);\n        console.log(\"Loading complete\");\n      }).catch(handleError);\n    }\n\n    const handleError = (error) => {\n      console.log(error);\n      setError(true);\n    }\n\n    const handleReset = () => {\n      setUrl(\"\");\n      setFilename(\"\");\n      setError(false);\n      setLoading(false);\n      setBundle(bundleutils.defaultBundle);\n      updateHistory();\n    }\n\n    const updateHistory = (newUrl) => {\n      const windowUrl = new URL(window.location);\n      if (newUrl) {\n        windowUrl.searchParams.set(\"url\", newUrl);\n      } else {\n        windowUrl.searchParams.delete(\"url\");\n      }\n      window.history.replaceState({}, '', windowUrl);\n    }\n\n    const classes = useStyles();\n\n    const MainView = () => {\n      if (error) {\n        console.log(\"Rendering error screen\");\n        return (\n          <Alert severity=\"error\">\n              <AlertTitle>Error</AlertTitle>\n              Could not load bundle, is it accessible and an OctoPrint SystemInfo Bundle zipfile?\n          </Alert>\n        )\n      } else if (loading) {\n        console.log(\"Rendering loading screen\");\n        return (\n          <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n              <CircularProgress />\n          </div>\n        )\n      } else if (bundle.systeminfo) {\n        console.log(\"Rendering bundle\");\n        return (\n          <BundleView bundle={bundle} />\n        )\n      } else {\n        console.log(\"Rendering empty\");\n        return (\n          <NothingLoaded onUpload={handleUpload} />\n        )\n      }\n    }\n\n    const Navbar = () => {\n      return (\n        <AppBar className={classes.appBar}>\n          <Toolbar className={classes.toolbar}>\n              <IconButton onClick={handleReset}>\n                <HomeIcon />\n              </IconButton>\n              <Hidden mdUp>\n                <div className={classes.grow} />\n              </Hidden>\n              <div className={classes.urlbar}>\n                <UrlBar url={url} filename={filename} handleUrlChange={handleUrlChange} />\n              </div>\n              {url ? <ShareButton url={url} /> : null}\n              <DarkModeToggle darkMode={darkMode} onChange={handleDarkModeToggle} />\n              <Hidden xsDown>\n                <IconButton href=\"https://github.com/OctoPrint/bundleviewer.octoprint.org\" target=\"_blank\">\n                  <GitHubIcon />\n                </IconButton>\n              </Hidden>\n          </Toolbar>\n        </AppBar>\n      )\n    }\n\n    return (\n        <ThemeProvider theme={darkModeTheme}>\n          <SnackbarProvider>\n            <div className={classes.root} style={{display: \"flex\"}}>\n                <CssBaseline />\n                <Navbar />\n                <main className={classes.content}>\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                      <MainView />\n                    </Container>\n                </main>\n            </div>\n          </SnackbarProvider>\n        </ThemeProvider>\n    )\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // Source: https://usehooks.com/useLocalStorage/\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that\n  // persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst search = window.location.search;\nconst params = new URLSearchParams(search);\n\n//const url = \"http://localhost:8000/octoprint-systeminfo-20210119184038.zip\";\n//const url = \"https://github.com/foosel/testing-stuff/files/5837673/octoprint-systeminfo-20210119184038.zip\";\nconst url = params.get('url', '');\n\nconsole.log(\"URL\", url);\n\nReactDOM.render(\n  <App url={(url == null) ? \"\" : url} />,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}