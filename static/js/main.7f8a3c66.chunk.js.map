{"version":3,"sources":["components/SystemInfo.js","components/LogView.js","util/zip.js","App.js","index.js"],"names":["SystemInfo","props","lines","info","split","filter","l","trim","map","key","value","console","log","line","index","useStyles","makeStyles","theme","flexGrow","overflow","padding","linenumber","display","width","palette","text","secondary","LogView","classes","content","className","height","itemCount","length","itemSize","style","loadRemote","url","a","fetch","mode","response","ok","Error","status","blob","JSZip","loadAsync","zip","filename","file","format","async","utils","loadRemoteZip","containsFile","getFileContents","root","grow","offset","mixins","toolbar","container","paddingTop","spacing","paddingBottom","position","borderRadius","shape","backgroundColor","fade","common","white","marginRight","marginLeft","urlIcon","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","App","prefersDarkMode","useMediaQuery","useState","darkMode","setDarkMode","pallet","darkModeTheme","createMuiTheme","type","systemInfo","setSystemInfo","logs","setLogs","useEffect","ziputils","then","files","promises","contents","forEach","promise","push","Promise","allSettled","result","catch","ThemeProvider","CssBaseline","AppBar","appBar","Toolbar","Typography","variant","noWrap","InputBase","placeholder","input","onChange","event","target","onKeyDown","window","location","search","encodeURIComponent","Switch","checked","Container","maxWidth","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","heading","AccordionDetails","language","params","URLSearchParams","decodeURIComponent","get","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.7f8a3c66.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function SystemInfo(props) {\n    const lines = props.info.split(\"\\n\").filter(l => l.trim() !== \"\").map(l => {\n        const [key, value] = l.split(\":\", 2);\n        return { key: key, value: value }\n    });\n\n    console.log(lines);\n\n    return (\n        <div>\n            {lines.map((line, index) => (\n                <div>\n                    <strong>{line.key}</strong>: {line.value}<br />\n                </div>\n            ))}\n        </div>\n    )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FixedSizeList } from \"react-window\";\n\nconst useStyles = makeStyles(theme => ({\n    log: {\n        flexGrow: 1,\n        overflow: \"auto\",\n        padding: 0,\n        \"font-family\": \"'JetBrains Mono', 'Droid Sans Mono', monospace\",\n    },\n    linenumber: {\n        display: \"inline-block\",\n        width: \"5em\",\n        \"text-align\": \"right\",\n        \"margin-right\": \"1em\",\n        \"color\": theme.palette.text.secondary\n    },\n    line: {\n\n    }\n}));\n\nexport default function LogView(props) {\n    const classes = useStyles();\n\n    const lines = props.content.split(\"\\n\");\n\n    const Line = ({ index, style }) => (\n        <span style={style}><span className={classes.linenumber}>{index+1}</span><span className={classes.line}>{lines[index]}</span></span>\n    )\n\n    return (\n        <code className={classes.log}>\n            <pre>\n                <FixedSizeList \n                    height={500}\n                    itemCount={lines.length}\n                    itemSize={20}\n                >\n                    {Line}\n                </FixedSizeList>\n            </pre>\n        </code>\n    )\n}","import JSZip from \"jszip\";\n\nasync function loadRemote(url) {\n    const response = await fetch(url, {mode: 'cors',});\n    console.log(response);\n    if (!response.ok) {\n        throw new Error(`Could not load file from ${url}: ${response.status}`);\n    }\n    return await response.blob();\n}\n\nasync function loadRemoteZip(url) {\n    const blob = await loadRemote(url);\n    return await JSZip.loadAsync(blob);\n}\n\nasync function containsFile(zip, filename) {\n    return await zip.file(filename) !== null;\n}\n\nasync function getFileContents(zip, filename, format) {\n    format = format || \"arraybuffer\";\n    return await zip.file(filename).async(format);\n}\n\nconst utils = {\n    loadRemote: loadRemote,\n    loadRemoteZip: loadRemoteZip,\n    containsFile: containsFile,\n    getFileContents: getFileContents\n}\n\nexport default utils;","import React, { useState, useEffect } from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline, InputBase } from \"@material-ui/core\";\nimport Switch from \"@material-ui/core/Switch\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n\nimport LinkIcon from \"@material-ui/icons/LinkOutlined\";\n\nimport SystemInfo from './components/SystemInfo';\nimport LogView from './components/LogView';\n\nimport ziputils from \"./util/zip\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        overflow: \"auto\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n    offset: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: `calc(100vh + ${theme.mixins.toolbar}px)`,\n      overflow: \"auto\"\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    url: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      flexGrow: 1\n    },\n    urlIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\",\n      width: \"100%\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: \"100%\",\n    }\n}));\n\nexport default function App(props) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [darkMode, setDarkMode] = useState(prefersDarkMode);\n    const pallet = darkMode ? \"dark\" : \"light\";\n    const darkModeTheme = createMuiTheme({\n        palette: {\n            type: pallet\n        }\n    });\n\n    let url = props.url;\n\n    const handleThemeToggle = () => {\n        setDarkMode(!darkMode);\n    }\n\n    const handleUrlChange = (event) => {\n      url = event.target.value;\n    }\n    const handleUrlEnter = (event) => {\n      if (event.key === \"Enter\") {\n        window.location.search = \"?url=\" + encodeURIComponent(url);\n      }\n    };\n\n    const classes = useStyles();\n\n    const [systemInfo, setSystemInfo] = useState(\"\");\n    const [logs, setLogs] = useState([]);\n\n    useEffect(() => {\n      if (props.url) {\n        ziputils.loadRemoteZip(props.url)\n          .then(zip => {\n            const files = [\"octoprint.log\", \"serial.log\", \"terminal.txt\", \"plugin_softwareupdate_console.log\", \"plugin_pluginmanager_console.log\"];\n\n            ziputils.getFileContents(zip, \"systeminfo.txt\", \"string\").then(content => {\n              setSystemInfo(content);\n            });\n\n            const promises = [];\n            const contents = {};\n\n            files.forEach(filename => {\n              const promise = ziputils.getFileContents(zip, filename, \"string\")\n                .then(content => {\n                  contents[filename] = content;\n                });\n              promises.push(promise);\n            })\n\n            Promise.allSettled(promises)\n              .then(() => {\n                const result = [];\n                files.forEach(filename => {\n                  if (contents[filename]) {\n                    result.push({ log: filename, content: contents[filename] });\n                  }\n                });\n                setLogs(result);\n              })\n          })\n          .catch(() => {\n            // error, ignore\n          });\n      }\n    }, [props.url]);\n\n    return (\n        <ThemeProvider theme={darkModeTheme}>\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" noWrap>\n                            OctoPrint Bundle Viewer\n                        </Typography>\n                        <div className={classes.url}>\n                          <div className={classes.urlIcon}>\n                            <LinkIcon />\n                          </div>\n                          <InputBase\n                            placeholder=\"URL...\"\n                            classes={{\n                              root: classes.inputRoot,\n                              input: classes.inputInput,\n                            }}\n                            onChange={handleUrlChange} \n                            onKeyDown={handleUrlEnter} \n                            value={url}\n                          />\n                        </div>\n                        <Switch checked={darkMode} onChange={handleThemeToggle} />\n                    </Toolbar>\n                </AppBar>\n\n                <main className={classes.content}>\n                    <div className={classes.offset} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n\n                      <Accordion defaultExpanded>\n                        <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel-sysinfo-content\" id=\"panel-sysinfo-header\">\n                          <Typography className={classes.heading}>System Information</Typography>\n                        </AccordionSummary>\n                        <AccordionDetails>\n                        <SystemInfo info={systemInfo} />\n                        </AccordionDetails>\n                      </Accordion>\n\n                      {logs.map((log, index) => (\n                        <Accordion>\n                          <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel-log-\" + index + \"-content\"} id={\"panel-log-\" + index + \"-header\"}>\n                            <Typography className={classes.heading}>{log.log}</Typography>\n                          </AccordionSummary>\n                          <AccordionDetails>\n                            <LogView log={log.log} content={log.content} language=\"plain\" />\n                          </AccordionDetails>\n                        </Accordion>\n                      ))}\n                    </Container>\n                </main>\n            </div>\n        </ThemeProvider>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst search = window.location.search;\nconst params = new URLSearchParams(search);\n\n//const url = \"http://localhost:8000/octoprint-systeminfo-20210119184038.zip\";\n//const url = \"https://github.com/foosel/testing-stuff/files/5837673/octoprint-systeminfo-20210119184038.zip\";\nconst url = decodeURIComponent(params.get('url'));\nconsole.log(\"URL\", url);\n\nReactDOM.render(\n  <App url={url} />,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}