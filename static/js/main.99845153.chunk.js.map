{"version":3,"sources":["components/DarkModeToggle.js","components/UrlBar.js","components/ShareButton.js","components/LogView.js","components/SystemInfo.js","util/zip.js","components/BundleView.js","components/NothingLoaded.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["DarkModeToggle","props","useState","darkMode","setDarkMode","Tooltip","title","IconButton","onClick","onChange","color","useStyles","makeStyles","theme","grow","flexGrow","url","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","urlIcon","padding","height","pointerEvents","display","alignItems","justifyContent","inputRoot","width","inputInput","paddingLeft","transition","transitions","create","UrlBar","classes","setUrl","className","InputBase","placeholder","root","input","event","target","value","onKeyDown","key","handleUrlChange","defaultValue","ShareButton","enqueueSnackbar","useSnackbar","shareModalOpen","setShareModalOpen","shareUrl","window","location","origin","pathname","encodeURIComponent","handleClose","Dialog","open","onClose","fullWidth","DialogTitle","DialogContent","TextField","InputProps","readOnly","onFocus","select","DialogActions","navigator","share","Button","document","clipboard","writeText","LogView","lines","content","split","lineCount","length","log","overflow","line","toString","text","secondary","itemCount","itemSize","index","style","data-linenumber","SystemInfo","info","filter","l","trim","map","console","loadRemote","a","fetch","mode","response","ok","Error","status","blob","JSZip","loadAsync","zip","filename","file","format","async","utils","loadRemoteZip","containsFile","getFileContents","BundleView","loading","setLoading","logsLoading","setLogsLoading","loadingError","setLoadingError","systemInfo","setSystemInfo","logs","setLogs","loadedUrl","useRef","useEffect","current","match","replace","corsRewrite","ziputils","then","files","promises","contents","forEach","promise","push","Promise","allSettled","result","catch","SystemInfoBlock","Alert","severity","AlertTitle","CircularProgress","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","Typography","heading","AccordionDetails","LogBlock","language","NothingLoaded","offset","mixins","toolbar","container","paddingTop","paddingBottom","App","initialValue","item","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","useMediaQuery","pallet","darkModeTheme","createMuiTheme","type","MainView","ThemeProvider","CssBaseline","AppBar","appBar","Toolbar","variant","noWrap","newUrl","windowUrl","URL","searchParams","set","history","pushState","Container","maxWidth","search","URLSearchParams","get","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.99845153.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DarkModeIcon from \"@material-ui/icons/Brightness4\";\nimport LightModeIcon from \"@material-ui/icons/Brightness7\";\n\nexport default function DarkModeToggle(props) {\n    const [darkMode, setDarkMode] = useState(props.darkMode);\n\n    const handleDarkModeToggle = () => {\n        props.onChange(!darkMode);\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <Tooltip title=\"Toggle dark mode\">\n            <IconButton onClick={handleDarkModeToggle} color=\"inherit\" title=\"Toggle Dark Mode\">\n                { darkMode ? <LightModeIcon /> : <DarkModeIcon /> }\n            </IconButton>\n        </Tooltip>\n    )\n}","import React, { useState } from \"react\";\n\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport InputBase from \"@material-ui/core/InputBase\";\nimport LinkIcon from \"@material-ui/icons/LinkOutlined\";\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1\n    },\n    url: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      flexGrow: 1\n    },\n    urlIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\",\n      width: \"100%\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: \"100%\",\n    }\n}));\n\n\nexport default function UrlBar(props) {\n    const classes = useStyles();\n\n    const [url, setUrl] = useState(props.url);\n\n    const handleChange = (event) => {\n        setUrl(event.target.value);\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === \"Enter\") {\n            props.handleUrlChange(url);\n        }\n    }\n\n    return (\n        <div className={classes.url}>\n            <div className={classes.urlIcon}>\n            <LinkIcon />\n            </div>\n            <InputBase\n            placeholder=\"URL...\"\n            classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n            }}\n            onChange={handleChange}\n            onKeyDown={handleKeyDown} \n            defaultValue={props.url}\n            />\n        </div>\n    )\n}","import React, { useState } from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport ShareIcon from \"@material-ui/icons/Share\";\n\nimport { useSnackbar } from \"notistack\";\n\nexport default function ShareButton(props) {\n    const { enqueueSnackbar } = useSnackbar();\n    const [ shareModalOpen, setShareModalOpen ] = useState();\n    const shareUrl = window.location.origin + window.location.pathname + \"?url=\" + encodeURIComponent(props.url);\n\n    const handleShareClick = () => {\n        setShareModalOpen(true);\n    }\n\n    const handleShare = () => {\n        if (navigator.share) {\n            navigator.share({\n                title: document.title,\n                url: shareUrl\n            })\n            handleClose();\n        }\n    }\n\n    const handleCopy = () => {\n        if (navigator.clipboard) {\n            navigator.clipboard.writeText(shareUrl);\n            enqueueSnackbar(\"URL copied to clipboard!\");\n            handleClose();\n        }\n    }\n\n    const handleClose = () => {\n        setShareModalOpen(false);\n    }\n\n    if (true) {\n        return (\n            <>\n            <Tooltip title=\"Get shareable link\">\n                <IconButton onClick={handleShareClick} color=\"inherit\">\n                    <ShareIcon />\n                </IconButton>\n            </Tooltip>\n\n            <Dialog open={shareModalOpen} onClose={handleClose} fullWidth>\n                <DialogTitle>Shareable link</DialogTitle>\n                <DialogContent>\n                    <TextField value={shareUrl} InputProps={{ readOnly: true, }} onFocus={event => {event.target.select()}} fullWidth />\n                </DialogContent>\n                <DialogActions>\n                    {(navigator.share) ? \n                        <Button onClick={handleShare}>\n                            Share\n                        </Button>\n                    :\n                        (null)\n                    }\n                    {(navigator.clipboard) ? \n                        <Button onClick={handleCopy}>\n                            Copy\n                        </Button>\n                    : \n                        (null)\n                    }\n                    <Button onClick={handleClose}>\n                        Close\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            </>\n        )\n    } else {\n        return (null)\n    }\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FixedSizeList } from \"react-window\";\n\nexport default function LogView(props) {\n    const lines = props.content.split(\"\\n\");\n    const lineCount = lines.length;\n\n    const classes = makeStyles(theme => ({\n        log: {\n            flexGrow: 1,\n            overflow: \"auto\",\n            padding: 0,\n            \"font-family\": \"'JetBrains Mono', 'Droid Sans Mono', monospace\",\n        },\n        line: {\n            \"&::before\": {\n                content: \"attr(data-linenumber)\",\n                display: \"inline-block\",\n                width: `${lineCount.toString().length}ch`,\n                \"text-align\": \"right\",\n                \"margin-right\": \"1em\",\n                \"color\": theme.palette.text.secondary\n            }\n        }\n    }))();\n\n    const Line = ({ index, style }) => (\n        <span style={style}><span data-linenumber={index + 1} className={classes.line}>{lines[index]}</span></span>\n    )\n\n    return (\n        <code className={classes.log}>\n            <pre>\n                <FixedSizeList \n                    height={500}\n                    itemCount={lineCount}\n                    itemSize={20}\n                >\n                    {Line}\n                </FixedSizeList>\n            </pre>\n        </code>\n    )\n}","import React from \"react\";\n\nexport default function SystemInfo(props) {\n    const lines = props.info.split(\"\\n\").filter(l => l.trim() !== \"\").map(l => {\n        const [key, value] = l.split(\":\", 2);\n        return { key: key, value: value }\n    });\n\n    console.log(lines);\n\n    return (\n        <div>\n            {lines.map((line, index) => (\n                <div key={line.key}>\n                    <strong>{line.key}</strong>: {line.value}<br />\n                </div>\n            ))}\n        </div>\n    )\n}","import JSZip from \"jszip\";\n\nasync function loadRemote(url) {\n    const response = await fetch(url, {mode: 'cors',});\n    console.log(response);\n    if (!response.ok) {\n        throw new Error(`Could not load file from ${url}: ${response.status}`);\n    }\n    return await response.blob();\n}\n\nasync function loadRemoteZip(url) {\n    const blob = await loadRemote(url);\n    return await JSZip.loadAsync(blob);\n}\n\nasync function containsFile(zip, filename) {\n    return await zip.file(filename) !== null;\n}\n\nasync function getFileContents(zip, filename, format) {\n    format = format || \"arraybuffer\";\n    return await zip.file(filename).async(format);\n}\n\nconst utils = {\n    loadRemote: loadRemote,\n    loadRemoteZip: loadRemoteZip,\n    containsFile: containsFile,\n    getFileContents: getFileContents\n}\n\nexport default utils;","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LogView from \"./LogView\";\nimport SystemInfo from \"./SystemInfo\";\n\nimport ziputils from \"../util/zip\";\n\nconst useStyles = makeStyles(theme => ({\n}));\n\nfunction corsRewrite(url) {\n    const githubRegex = /^https:\\/\\/github\\.com\\/[a-zA-Z0-9_-]+\\/[a-zA-Z0-9_-]+\\/files\\//\n    if (url.match(githubRegex)) {\n        return url.replace(\"https://github.com\", \"https://bundleviewer.octoprint.org/bundles\");\n    }\n    return url;\n}\n\nexport default function BundleView(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(true);\n    const [logsLoading, setLogsLoading] = useState(true);\n    const [loadingError, setLoadingError] = useState(false);\n\n    const [systemInfo, setSystemInfo] = useState(\"\");\n    const [logs, setLogs] = useState([]);\n\n    const loadedUrl = useRef();\n\n    useEffect(() => {\n      if (props.url) {\n        console.log(\"loadedURL\", loadedUrl.current);\n        if (props.url === loadedUrl.current) {\n            console.log(\"Same URL\");\n            return;\n        }\n        const url = corsRewrite(props.url);\n        \n        setLoading(true);\n        setLogsLoading(true);\n        setLoadingError(false);\n        ziputils.loadRemoteZip(url)\n        .then(zip => {\n            loadedUrl.current = url;\n\n            const files = [\"octoprint.log\", \"serial.log\", \"terminal.txt\", \"plugin_softwareupdate_console.log\", \"plugin_pluginmanager_console.log\"];\n\n            ziputils.getFileContents(zip, \"systeminfo.txt\", \"string\")\n              .then(content => {\n                setSystemInfo(content);\n                setLoading(false);\n\n                const promises = [];\n                const contents = {};\n    \n                files.forEach(filename => {\n                    const promise = ziputils.getFileContents(zip, filename, \"string\")\n                    .then(content => {\n                        contents[filename] = content;\n                    });\n                    promises.push(promise);\n                })\n    \n                Promise.allSettled(promises)\n                    .then(() => {\n                    const result = [];\n                    files.forEach(filename => {\n                        if (contents[filename]) {\n                        result.push({ log: filename, content: contents[filename] });\n                        }\n                    });\n                    setLogs(result);\n                    setLogsLoading(false);\n                    })\n                }).catch(() => {\n                    setLoadingError(true);\n                });\n\n        })\n        .catch(() => {\n            setLoadingError(true);\n        });\n      }\n    }, [props.url]);\n\n    const SystemInfoBlock = () => {\n        if (loadingError) {\n            return (\n                <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    Could not load bundle, is the URL correct and pointing to an OctoPrint SystemInfo Bundle zipfile?\n                </Alert>\n            )\n        } else if (loading) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n                    <CircularProgress />\n                </div>\n            )\n        } else {\n            return (\n                <Accordion defaultExpanded>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel-sysinfo-content\" id=\"panel-sysinfo-header\">\n                    <Typography className={classes.heading}>System Information</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                    <SystemInfo info={systemInfo} />\n                    </AccordionDetails>\n                </Accordion>\n            )\n        }\n    }\n\n    const LogBlock = () => {\n        if (loading || loadingError) {\n            return (null)\n        } else if (logsLoading) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n                    <CircularProgress />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    {logs.map((log, index) => (\n                        <Accordion key={log.log}>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel-log-\" + index + \"-content\"} id={\"panel-log-\" + index + \"-header\"}>\n                                <Typography className={classes.heading}>{log.log}</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <LogView log={log.log} content={log.content} language=\"plain\" />\n                            </AccordionDetails>\n                        </Accordion>\n                    ))}\n                </div>\n            )\n        }\n    }\n\n    return (\n      <div>\n          <SystemInfoBlock />\n          <LogBlock />\n      </div>\n    )\n}","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function NothingLoaded() {\n    return (\n        <Typography style={{ display: \"flex\", justifyContent: \"center\" }}>\n            Please enter a bundle URL and press Enter.\n        </Typography>\n    )\n}","import React, { useState } from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport DarkModeToggle from \"./components/DarkModeToggle\";\nimport UrlBar from \"./components/UrlBar\";\nimport ShareButton from \"./components/ShareButton\";\nimport BundleView from \"./components/BundleView\";\nimport NothingLoaded from \"./components/NothingLoaded\";\n\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        overflow: \"auto\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n    offset: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: `calc(100vh + ${theme.mixins.toolbar}px)`,\n      overflow: \"auto\"\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n}));\n\nexport default function App(props) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [darkMode, setDarkMode] = useLocalStorage(\"enableDarkMode\", prefersDarkMode);\n    const [url, setUrl] = useState(props.url);\n\n    const pallet = darkMode ? \"dark\" : \"light\";\n    const darkModeTheme = createMuiTheme({\n        palette: {\n            type: pallet\n        }\n    });\n\n    const handleDarkModeToggle = () => {\n        setDarkMode(!darkMode);\n    }\n\n    const handleUrlChange = (newUrl) => {\n      setUrl(newUrl);\n      \n      const windowUrl = new URL(window.location);\n      windowUrl.searchParams.set(\"url\", url);\n      window.history.pushState({}, '', windowUrl);\n    }\n\n    const classes = useStyles();\n\n    const MainView = () => {\n      if (url) {\n        return (\n          <BundleView url={url} />\n        )\n      } else {\n        return (\n          <NothingLoaded />\n        )\n      }\n    }\n\n    return (\n        <ThemeProvider theme={darkModeTheme}>\n          <SnackbarProvider>\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" noWrap>\n                            OctoPrint Bundle Viewer\n                        </Typography>\n                        <UrlBar url={url} handleUrlChange={handleUrlChange} />\n                        <ShareButton url={url} />\n                        <DarkModeToggle darkMode={darkMode} onChange={handleDarkModeToggle} />\n                    </Toolbar>\n                </AppBar>\n\n                <main className={classes.content}>\n                    <div className={classes.offset} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                      <MainView />\n                    </Container>\n                </main>\n            </div>\n          </SnackbarProvider>\n        </ThemeProvider>\n    )\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // Source: https://usehooks.com/useLocalStorage/\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that\n  // persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst search = window.location.search;\nconst params = new URLSearchParams(search);\n\n//const url = \"http://localhost:8000/octoprint-systeminfo-20210119184038.zip\";\n//const url = \"https://github.com/foosel/testing-stuff/files/5837673/octoprint-systeminfo-20210119184038.zip\";\nconst url = params.get('url', '');\n\nconsole.log(\"URL\", url);\n\nReactDOM.render(\n  <App url={(url == null) ? \"\" : url} />,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}