{"version":3,"sources":["components/DarkModeToggle.js","components/UrlBar.js","components/LogView.js","components/SystemInfo.js","util/zip.js","components/BundleView.js","components/NothingLoaded.js","App.js","hooks/useLocalStorage.js","index.js"],"names":["DarkModeToggle","props","useState","darkMode","setDarkMode","style","display","alignItems","Switch","checked","onChange","useStyles","makeStyles","theme","grow","flexGrow","url","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginRight","spacing","marginLeft","urlIcon","padding","height","pointerEvents","justifyContent","inputRoot","color","width","inputInput","paddingLeft","transition","transitions","create","UrlBar","classes","setUrl","className","InputBase","placeholder","root","input","event","target","value","onKeyDown","key","handleUrlChange","defaultValue","LogView","lines","content","split","lineCount","length","log","overflow","linenumber","toString","text","secondary","line","itemCount","itemSize","index","SystemInfo","info","filter","l","trim","map","console","loadRemote","a","fetch","mode","response","ok","Error","status","blob","JSZip","loadAsync","zip","filename","file","format","async","utils","loadRemoteZip","containsFile","getFileContents","BundleView","loading","setLoading","logsLoading","setLogsLoading","loadingError","setLoadingError","systemInfo","setSystemInfo","logs","setLogs","loadedUrl","useRef","useEffect","current","match","replace","corsRewrite","ziputils","then","files","promises","contents","forEach","promise","push","Promise","allSettled","result","catch","SystemInfoBlock","Alert","severity","AlertTitle","CircularProgress","Accordion","defaultExpanded","AccordionSummary","expandIcon","aria-controls","id","Typography","heading","AccordionDetails","LogBlock","language","NothingLoaded","offset","mixins","toolbar","container","paddingTop","paddingBottom","App","initialValue","item","window","localStorage","getItem","JSON","parse","error","storedValue","setStoredValue","valueToStore","Function","setItem","stringify","useLocalStorage","useMediaQuery","pallet","darkModeTheme","createMuiTheme","type","MainView","ThemeProvider","CssBaseline","AppBar","appBar","Toolbar","variant","noWrap","newUrl","Container","maxWidth","search","location","URLSearchParams","get","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.c7db3f48.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport Brightness6 from \"@material-ui/icons/Brightness6\";\n\nexport default function DarkModeToggle(props) {\n    const [darkMode, setDarkMode] = useState(props.darkMode);\n\n    const handleDarkModeToggle = () => {\n        props.onChange(!darkMode);\n        setDarkMode(!darkMode);\n    };\n\n    return (\n        <div style={{ display: \"flex\", alignItems: \"center\" }}>\n            <Brightness6 />\n            <Switch checked={darkMode} onChange={handleDarkModeToggle} />\n        </div>\n        \n    )\n}","import React, { useState } from \"react\";\n\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\nimport InputBase from \"@material-ui/core/InputBase\";\nimport LinkIcon from \"@material-ui/icons/LinkOutlined\";\n\n\nconst useStyles = makeStyles(theme => ({\n    grow: {\n      flexGrow: 1\n    },\n    url: {\n      position: 'relative',\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: fade(theme.palette.common.white, 0.15),\n      \"&:hover\": {\n        backgroundColor: fade(theme.palette.common.white, 0.25),\n      },\n      marginRight: theme.spacing(2),\n      marginLeft: theme.spacing(2),\n      flexGrow: 1\n    },\n    urlIcon: {\n      padding: theme.spacing(0, 2),\n      height: \"100%\",\n      position: \"absolute\",\n      pointerEvents: \"none\",\n      display: \"flex\",\n      alignItems: \"center\",\n      justifyContent: \"center\"\n    },\n    inputRoot: {\n      color: \"inherit\",\n      width: \"100%\"\n    },\n    inputInput: {\n      padding: theme.spacing(1, 1, 1, 0),\n      paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n      transition: theme.transitions.create('width'),\n      width: \"100%\",\n    }\n}));\n\n\nexport default function UrlBar(props) {\n    const classes = useStyles();\n\n    const [url, setUrl] = useState(props.url);\n\n    const handleChange = (event) => {\n        setUrl(event.target.value);\n    }\n\n    const handleKeyDown = (event) => {\n        if (event.key === \"Enter\") {\n            props.handleUrlChange(url);\n        }\n    }\n\n    return (\n        <div className={classes.url}>\n        <div className={classes.urlIcon}>\n          <LinkIcon />\n        </div>\n        <InputBase\n          placeholder=\"URL...\"\n          classes={{\n            root: classes.inputRoot,\n            input: classes.inputInput,\n          }}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown} \n          defaultValue={props.url}\n        />\n      </div>\n\n    )\n}","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { FixedSizeList } from \"react-window\";\n\nexport default function LogView(props) {\n    const lines = props.content.split(\"\\n\");\n    const lineCount = lines.length;\n\n    const classes = makeStyles(theme => ({\n        log: {\n            flexGrow: 1,\n            overflow: \"auto\",\n            padding: 0,\n            \"font-family\": \"'JetBrains Mono', 'Droid Sans Mono', monospace\",\n        },\n        linenumber: {\n            display: \"inline-block\",\n            width: `${lineCount.toString().length}ch`,\n            \"text-align\": \"right\",\n            \"margin-right\": \"1em\",\n            \"color\": theme.palette.text.secondary\n        },\n        line: {\n    \n        }\n    }))();\n\n    const Line = ({ index, style }) => (\n        <span style={style}><span className={classes.linenumber}>{index+1}</span><span className={classes.line}>{lines[index]}</span></span>\n    )\n\n    return (\n        <code className={classes.log}>\n            <pre>\n                <FixedSizeList \n                    height={500}\n                    itemCount={lineCount}\n                    itemSize={20}\n                >\n                    {Line}\n                </FixedSizeList>\n            </pre>\n        </code>\n    )\n}","import React from \"react\";\n\nexport default function SystemInfo(props) {\n    const lines = props.info.split(\"\\n\").filter(l => l.trim() !== \"\").map(l => {\n        const [key, value] = l.split(\":\", 2);\n        return { key: key, value: value }\n    });\n\n    console.log(lines);\n\n    return (\n        <div>\n            {lines.map((line, index) => (\n                <div key={line.key}>\n                    <strong>{line.key}</strong>: {line.value}<br />\n                </div>\n            ))}\n        </div>\n    )\n}","import JSZip from \"jszip\";\n\nasync function loadRemote(url) {\n    const response = await fetch(url, {mode: 'cors',});\n    console.log(response);\n    if (!response.ok) {\n        throw new Error(`Could not load file from ${url}: ${response.status}`);\n    }\n    return await response.blob();\n}\n\nasync function loadRemoteZip(url) {\n    const blob = await loadRemote(url);\n    return await JSZip.loadAsync(blob);\n}\n\nasync function containsFile(zip, filename) {\n    return await zip.file(filename) !== null;\n}\n\nasync function getFileContents(zip, filename, format) {\n    format = format || \"arraybuffer\";\n    return await zip.file(filename).async(format);\n}\n\nconst utils = {\n    loadRemote: loadRemote,\n    loadRemoteZip: loadRemoteZip,\n    containsFile: containsFile,\n    getFileContents: getFileContents\n}\n\nexport default utils;","import React, { useState, useEffect, useRef } from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport CircularProgress from '@material-ui/core/CircularProgress';\nimport { Alert, AlertTitle } from '@material-ui/lab';\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport LogView from \"./LogView\";\nimport SystemInfo from \"./SystemInfo\";\n\nimport ziputils from \"../util/zip\";\n\nconst useStyles = makeStyles(theme => ({\n}));\n\nfunction corsRewrite(url) {\n    const githubRegex = /^https:\\/\\/github\\.com\\/[a-zA-Z0-9_-]+\\/[a-zA-Z0-9_-]+\\/files\\//\n    if (url.match(githubRegex)) {\n        return url.replace(\"https://github.com\", \"https://bundleviewer.octoprint.org/bundles\");\n    }\n    return url;\n}\n\nexport default function BundleView(props) {\n    const classes = useStyles();\n\n    const [loading, setLoading] = useState(true);\n    const [logsLoading, setLogsLoading] = useState(true);\n    const [loadingError, setLoadingError] = useState(false);\n\n    const [systemInfo, setSystemInfo] = useState(\"\");\n    const [logs, setLogs] = useState([]);\n\n    const loadedUrl = useRef();\n\n    useEffect(() => {\n      if (props.url) {\n        console.log(\"loadedURL\", loadedUrl.current);\n        if (props.url === loadedUrl.current) {\n            console.log(\"Same URL\");\n            return;\n        }\n        const url = corsRewrite(props.url);\n        \n        setLoading(true);\n        setLogsLoading(true);\n        setLoadingError(false);\n        ziputils.loadRemoteZip(url)\n        .then(zip => {\n            loadedUrl.current = url;\n\n            const files = [\"octoprint.log\", \"serial.log\", \"terminal.txt\", \"plugin_softwareupdate_console.log\", \"plugin_pluginmanager_console.log\"];\n\n            ziputils.getFileContents(zip, \"systeminfo.txt\", \"string\")\n              .then(content => {\n                setSystemInfo(content);\n                setLoading(false);\n\n                const promises = [];\n                const contents = {};\n    \n                files.forEach(filename => {\n                    const promise = ziputils.getFileContents(zip, filename, \"string\")\n                    .then(content => {\n                        contents[filename] = content;\n                    });\n                    promises.push(promise);\n                })\n    \n                Promise.allSettled(promises)\n                    .then(() => {\n                    const result = [];\n                    files.forEach(filename => {\n                        if (contents[filename]) {\n                        result.push({ log: filename, content: contents[filename] });\n                        }\n                    });\n                    setLogs(result);\n                    setLogsLoading(false);\n                    })\n                }).catch(() => {\n                    setLoadingError(true);\n                });\n\n        })\n        .catch(() => {\n            setLoadingError(true);\n        });\n      }\n    }, [props.url]);\n\n    const SystemInfoBlock = () => {\n        if (loadingError) {\n            return (\n                <Alert severity=\"error\">\n                    <AlertTitle>Error</AlertTitle>\n                    Could not load bundle, is the URL correct and pointing to an OctoPrint SystemInfo Bundle zipfile?\n                </Alert>\n            )\n        } else if (loading) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n                    <CircularProgress />\n                </div>\n            )\n        } else {\n            return (\n                <Accordion defaultExpanded>\n                    <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls=\"panel-sysinfo-content\" id=\"panel-sysinfo-header\">\n                    <Typography className={classes.heading}>System Information</Typography>\n                    </AccordionSummary>\n                    <AccordionDetails>\n                    <SystemInfo info={systemInfo} />\n                    </AccordionDetails>\n                </Accordion>\n            )\n        }\n    }\n\n    const LogBlock = () => {\n        if (loading || loadingError) {\n            return (null)\n        } else if (logsLoading) {\n            return (\n                <div style={{ display: \"flex\", justifyContent: \"center\", }}>\n                    <CircularProgress />\n                </div>\n            )\n        } else {\n            return (\n                <div>\n                    {logs.map((log, index) => (\n                        <Accordion key={log.log}>\n                            <AccordionSummary expandIcon={<ExpandMoreIcon />} aria-controls={\"panel-log-\" + index + \"-content\"} id={\"panel-log-\" + index + \"-header\"}>\n                                <Typography className={classes.heading}>{log.log}</Typography>\n                            </AccordionSummary>\n                            <AccordionDetails>\n                                <LogView log={log.log} content={log.content} language=\"plain\" />\n                            </AccordionDetails>\n                        </Accordion>\n                    ))}\n                </div>\n            )\n        }\n    }\n\n    return (\n      <div>\n          <SystemInfoBlock />\n          <LogBlock />\n      </div>\n    )\n}","import React from \"react\";\n\nimport Typography from \"@material-ui/core/Typography\";\n\nexport default function NothingLoaded() {\n    return (\n        <Typography style={{ display: \"flex\", justifyContent: \"center\" }}>\n            Please enter a bundle URL and press Enter.\n        </Typography>\n    )\n}","import React, { useState } from \"react\";\n\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Container from \"@material-ui/core/Container\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport DarkModeToggle from \"./components/DarkModeToggle\";\nimport UrlBar from \"./components/UrlBar\";\nimport BundleView from \"./components/BundleView\";\nimport NothingLoaded from \"./components/NothingLoaded\";\n\nimport useLocalStorage from \"./hooks/useLocalStorage\";\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        display: \"flex\",\n        overflow: \"auto\"\n    },\n    grow: {\n      flexGrow: 1\n    },\n    offset: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: `calc(100vh + ${theme.mixins.toolbar}px)`,\n      overflow: \"auto\"\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n}));\n\nexport default function App(props) {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [darkMode, setDarkMode] = useLocalStorage(\"enableDarkMode\", prefersDarkMode);\n    const [url, setUrl] = useState(props.url);\n\n    const pallet = darkMode ? \"dark\" : \"light\";\n    const darkModeTheme = createMuiTheme({\n        palette: {\n            type: pallet\n        }\n    });\n\n    const handleDarkModeToggle = () => {\n        setDarkMode(!darkMode);\n    }\n\n    const handleUrlChange = (newUrl) => {\n      setUrl(newUrl);\n    }\n\n    const classes = useStyles();\n\n    const MainView = () => {\n      if (url) {\n        return (\n          <BundleView url={url} />\n        )\n      } else {\n        return (\n          <NothingLoaded />\n        )\n      }\n    }\n\n    return (\n        <ThemeProvider theme={darkModeTheme}>\n            <div className={classes.root}>\n                <CssBaseline />\n\n                <AppBar position=\"fixed\" className={classes.appBar}>\n                    <Toolbar>\n                        <Typography variant=\"h6\" noWrap>\n                            OctoPrint Bundle Viewer\n                        </Typography>\n                        <UrlBar url={url} handleUrlChange={handleUrlChange} />\n                        <DarkModeToggle darkMode={darkMode} onChange={handleDarkModeToggle} />\n                    </Toolbar>\n                </AppBar>\n\n                <main className={classes.content}>\n                    <div className={classes.offset} />\n                    <Container maxWidth=\"lg\" className={classes.container}>\n                      <MainView />\n                    </Container>\n                </main>\n            </div>\n        </ThemeProvider>\n    )\n}\n","import { useState } from \"react\";\n\nexport default function useLocalStorage(key, initialValue) {\n  // Source: https://usehooks.com/useLocalStorage/\n\n  // State to store our value\n  // Pass initial state function to useState so logic is only executed once\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      // Get from local storage by key\n      const item = window.localStorage.getItem(key);\n\n      // Parse stored json or if none return initialValue\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      // If error also return initialValue\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  // Return a wrapped version of useState's setter function that\n  // persists the new value to localStorage.\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n\n      // Save state\n      setStoredValue(valueToStore);\n\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nconst search = window.location.search;\nconst params = new URLSearchParams(search);\n\n//const url = \"http://localhost:8000/octoprint-systeminfo-20210119184038.zip\";\n//const url = \"https://github.com/foosel/testing-stuff/files/5837673/octoprint-systeminfo-20210119184038.zip\";\nconst url = params.get('url', '');\n\nconsole.log(\"URL\", url);\n\nReactDOM.render(\n  <App url={(url == null) ? \"\" : url} />,\n  document.querySelector('#root'),\n);"],"sourceRoot":""}